'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if('value'in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function')}}var N=8;var WH=100/N;var TOP_UP=4;var BOTTOM_FROM=N-3;var BG_COLORS={red:'#ff0000',blue:'#0000ff'};var COLORS={checker:{light:'red',dark:'blue'},cell:{true:'black',false:'white'}};var Cell=function(){function Cell(x,y,clickHandle){var _this=this;_classCallCheck(this,Cell);this.x=x;this.y=y;this.id='cell_'+x+'_'+y;this.color=COLORS.cell[x%2===y%2];this.checker=null;this.cellDOM=function(){var cell=document.createElement('div');cell.id=_this.id;cell.className='cell cell__'+_this.color;cell.style.width=WH+'%';cell.style.height=WH+'%';cell.onclick=clickHandle;if(!cell.hasOwnProperty('obj')){cell.obj=_this}return cell}()}// public methods
_createClass(Cell,[{key:'getPosition',value:function getPosition(){return{x:this.x,y:this.y}}},{key:'containChecker',value:function containChecker(checker){this.checker=checker;return null}},{key:'hasChecker',value:function hasChecker(){this.checker!=null}},{key:'removeChecker',value:function removeChecker(){this.cellDOM.removeChild(this.checker.checkerDOM);this.checker=null}},{key:'highlight',value:function highlight(){this.cellDOM.classList.toggle('highlight')}},{key:'unhighlight',value:function unhighlight(){this.cellDOM.classList.remove('highlight')}},{key:'isHighlighted',value:function isHighlighted(){this.cellDOM.classList.contains('highlight')}}]);return Cell}();var Checker=function(){function Checker(color,clickHandle){var _this2=this;_classCallCheck(this,Checker);this.color=color;this.cell=null;this.checkerDOM=function(){var checker=document.createElement('div');checker.className='checker checker__'+_this2.color;if(!checker.hasOwnProperty('obj')){checker.obj=_this2}checker.addEventListener('click',clickHandle);return checker}()}// public methods
_createClass(Checker,[{key:'activate',value:function activate(){this.checkerDOM.classList.toggle('active')}},{key:'belongsTo',value:function belongsTo(cell){this.cell=cell;if(cell){cell.cellDOM.appendChild(this.checkerDOM)}}},{key:'canTurn',value:function canTurn(currentTurn){this.color===currentTurn}},{key:'isMovePossible',value:function isMovePossible(currentChecker,currentTurn){return this.canTurn(currentTurn)&&(currentChecker==null||currentChecker!==this)}},{key:'moveTo',value:function moveTo(cell){this.cell.removeChecker();this.belongsTo(cell);cell.containChecker(this)}}]);return Checker}();function Checkers(){var _moves;var self=this;this.N=N;this.TURNS=[COLORS.checker.light,COLORS.checker.dark];this.CELL_AFTER_EATING='cell_after_eating';this.CELL_FREE='cell_free';// 0 - light, 1 - dark
this.currentTurn=this.TURNS[0];this.turnsCount=0;this.currentChecker=null;this.boardDOM=document.getElementById('board');this.turnsCountDOM=document.getElementById('turns_count');this.turnColorDOM=document.getElementById('current_turn_color');this.getCell=function(x,y){var cell=document.getElementById('cell_'+x+'_'+y);return cell?cell.obj:null};var gameController={LEFT:0,RIGHT:1,moves:(_moves={},_defineProperty(_moves,COLORS.checker.light,{fw:[{x:-1,y:-1},{x:-1,y:1}],bw:[{x:1,y:-1},{x:1,y:1}]}),_defineProperty(_moves,COLORS.checker.dark,{fw:[{x:1,y:-1},{x:1,y:1}],bw:[{x:-1,y:-1},{x:-1,y:1}]}),_moves),makeMove:function makeMove(cell){if(self.currentChecker&&cell.isHighlighted()){// console.log('can move to this cell')
var wasEaten=this.eatIfItPossible(self.currentChecker.cell,cell);var mustEat=this.getAvailableMoves(self.currentChecker,true);self.currentChecker.moveTo(cell);deactivateCheckers();if(wasEaten&&mustEat){self.currentChecker.activate();this.showMoves(mustEat)}else{this.setNexnTurn()}}},showMoves:function showMoves(moves){if(moves){moves.forEach(function(move){if(move&&move.cell){move.cell.highlight()}})}},getAvailableMoves:function getAvailableMoves(checker){var isNotFirst=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;var checkerMoves=this.moves[checker.color];var enemyEatingFilter=function enemyEatingFilter(mv){return mv&&mv.cell&&mv.type===self.CELL_AFTER_EATING};var freeMoveFilter=function freeMoveFilter(mv){return mv&&mv.cell&&mv.type===self.CELL_FREE};var moves=[];moves.push(this.getAvailableCell(checker,checkerMoves.fw[this.LEFT],isNotFirst),this.getAvailableCell(checker,checkerMoves.fw[this.RIGHT],isNotFirst),this.getAvailableCell(checker,checkerMoves.bw[this.LEFT],true),this.getAvailableCell(checker,checkerMoves.bw[this.RIGHT],true));// console.log(moves)
if(moves.some(enemyEatingFilter)){moves=moves.filter(enemyEatingFilter)}else{moves=moves.filter(freeMoveFilter)}return moves.length?moves:null},getAvailableCell:function getAvailableCell(checker,direction){var onlyEat=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;var curPos=checker.cell.getPosition();var cell=self.getCell(curPos.x+direction.x,curPos.y+direction.y);var cellHasChecker=cell&&cell.hasChecker();if(!cellHasChecker&&!onlyEat){return{type:self.CELL_FREE,cell:cell}}if(cellHasChecker&&checker.color!==cell.checker.color){return{type:self.CELL_AFTER_EATING,cell:this.cellAfterEating(cell.getPosition(),direction)}}return null},cellAfterEating:function cellAfterEating(enemyPosition,dirPosition){var cell=self.getCell(enemyPosition.x+dirPosition.x,enemyPosition.y+dirPosition.y);return cell&&!cell.hasChecker()?cell:null},eatIfItPossible:function eatIfItPossible(curCell,nextCell){if(Math.abs(curCell.x-nextCell.x)===2){var direction=this.calcDirectionOfMove(curCell,nextCell);var enemyCell=self.getCell(curCell.x+direction.x,curCell.y+direction.y);enemyCell.checker.belongsTo(null);enemyCell.removeChecker();return true}return false},calcDirectionOfMove:function calcDirectionOfMove(curCell,nextCell){return{x:(nextCell.x-curCell.x)/2,y:(nextCell.y-curCell.y)/2}},haveSomeoneToEat:function haveSomeoneToEat(){},setNexnTurn:function setNexnTurn(){self.turnsCount++;self.currentTurn=self.TURNS[self.turnsCount%2]}};function deactivateCheckers(){var activeCheckers=document.getElementsByClassName('checker active');if(activeCheckers.length){Object.keys(activeCheckers).map(function(i){return activeCheckers[i].classList.remove('active')});var highlights=document.querySelectorAll('.cell.highlight');Object.keys(highlights).map(function(i){return highlights[i].obj.unhighlight()})}}function checkerClickHandle(e){var checker=this.obj;deactivateCheckers();if(checker!==undefined&&checker.isMovePossible(self.currentChecker,self.currentTurn)){var availableMoves=gameController.getAvailableMoves(checker);checker.activate();gameController.showMoves(availableMoves);self.currentChecker=checker}else{self.currentChecker=null}return false}function cellClickHandle(e){var cell=this.obj;gameController.makeMove(cell);updateInfo();return false}// drawing board
function drawBoard(){for(var i=1;i<=self.N;i++){for(var j=1;j<=self.N;j++){var cell=new Cell(i,j,cellClickHandle);self.boardDOM.appendChild(cell.cellDOM);drawChecker(cell)}}}function drawChecker(cell){if(cell.y%2===cell.x%2&&(cell.x<TOP_UP||cell.x>BOTTOM_FROM)){var checkerColor=cell.x<TOP_UP?COLORS.checker.dark:COLORS.checker.light;var checker=new Checker(checkerColor,checkerClickHandle);checker.belongsTo(cell);cell.containChecker(checker)}}function updateInfo(){self.turnsCountDOM.textContent=self.turnsCount;self.turnColorDOM.style.backgroundColor=BG_COLORS[self.currentTurn]}drawBoard();updateInfo();// testing functions
function testCheckers(checkerColor,cells){cells.forEach(function(cell){var testChecker=new Checker(checkerColor);var testCell=document.getElementById('cell_'+cell.x+'_'+cell.y).obj;testChecker.belongsTo(testCell);testCell.containChecker(testChecker)})}function deleteChecker(x,y){var cell=document.getElementById('cell_'+x+'_'+y).obj;if(!cell||!cell.checker)return false;cell.removeChecker();return true}testCheckers(COLORS.checker.dark,[{x:5,y:5},{x:5,y:3}]);deleteChecker(6,4);deleteChecker(6,6)}Checkers.init=function(){window.checkers=new Checkers};Checkers.init();